apply from: "config.gradle"

buildscript {
    ext.kotlin_version = '1.3.72'
    repositories {
        jcenter()
        google()
        mavenCentral()
        maven { url "https://jitpack.io" }
        maven { url 'https://dl.bintray.com/umsdk/release' }
        maven { url 'https://zendesk.jfrog.io/zendesk/repo' }
    }

    dependencies {
        classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.17"
        classpath 'com.google.gms:google-services:4.3.8'
        classpath 'com.android.tools.build:gradle:4.2.2'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'com.billy.android:cc-register:1.1.2'
        classpath 'org.greenrobot:greendao-gradle-plugin:3.3.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        jcenter()
        google()
        mavenCentral()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url "https://jitpack.io" }
        maven { url 'https://dl.bintray.com/umsdk/release' }
        maven { url 'https://zendesk.jfrog.io/zendesk/repo' }
        flatDir {
            dirs 'libs'
        }
        maven {
            url  "https://dl.bintray.com/tronj/tronj"
        }
        maven { url "http://jcenter.bintray.com" }
    }
    subprojects {
        project.configurations.all {
            resolutionStrategy.eachDependency { details ->
                if (details.requested.group == 'com.android.support'
                        && !details.requested.name.contains('multidex')
                        && !details.requested.name.contains('test')
                        && !details.requested.name.contains('constraint')
                ) {
                    details.useVersion rootProject.ext.version["androidSupportSdkVersion"]
                }
            }
        }

        ext.zxingCore = 'com.google.zxing:core:3.4.0'
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// sss123987456